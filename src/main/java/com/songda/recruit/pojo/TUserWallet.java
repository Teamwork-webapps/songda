package com.songda.recruit.pojo;
// Generated 2018-3-2 20:14:30 by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TUserWallet generated by hbm2java
 */
@Entity
@Table(name = "t_user_wallet", catalog = "recruit")
public class TUserWallet implements java.io.Serializable {

	private long id;
	private BigDecimal price;
	private BigDecimal freezePrice;
	private Boolean stat;
	private Boolean takeLock;
	private Date checkingTime;
	private boolean checkingStat;
	private long createBy;
	private Date createTime;
	private Long updateBy;
	private Date updateTime;
	private boolean delflag;

	public TUserWallet() {
	}

	public TUserWallet(long id, BigDecimal price, BigDecimal freezePrice, Date checkingTime, boolean checkingStat,
			long createBy, Date createTime, boolean delflag) {
		this.id = id;
		this.price = price;
		this.freezePrice = freezePrice;
		this.checkingTime = checkingTime;
		this.checkingStat = checkingStat;
		this.createBy = createBy;
		this.createTime = createTime;
		this.delflag = delflag;
	}

	public TUserWallet(long id, BigDecimal price, BigDecimal freezePrice, Boolean stat, Boolean takeLock,
			Date checkingTime, boolean checkingStat, long createBy, Date createTime, Long updateBy, Date updateTime,
			boolean delflag) {
		this.id = id;
		this.price = price;
		this.freezePrice = freezePrice;
		this.stat = stat;
		this.takeLock = takeLock;
		this.checkingTime = checkingTime;
		this.checkingStat = checkingStat;
		this.createBy = createBy;
		this.createTime = createTime;
		this.updateBy = updateBy;
		this.updateTime = updateTime;
		this.delflag = delflag;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "price", nullable = false, precision = 20)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "freeze_price", nullable = false, precision = 20)
	public BigDecimal getFreezePrice() {
		return this.freezePrice;
	}

	public void setFreezePrice(BigDecimal freezePrice) {
		this.freezePrice = freezePrice;
	}

	@Column(name = "stat")
	public Boolean getStat() {
		return this.stat;
	}

	public void setStat(Boolean stat) {
		this.stat = stat;
	}

	@Column(name = "take_lock")
	public Boolean getTakeLock() {
		return this.takeLock;
	}

	public void setTakeLock(Boolean takeLock) {
		this.takeLock = takeLock;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "checking_time", nullable = false, length = 19)
	public Date getCheckingTime() {
		return this.checkingTime;
	}

	public void setCheckingTime(Date checkingTime) {
		this.checkingTime = checkingTime;
	}

	@Column(name = "checking_stat", nullable = false)
	public boolean isCheckingStat() {
		return this.checkingStat;
	}

	public void setCheckingStat(boolean checkingStat) {
		this.checkingStat = checkingStat;
	}

	@Column(name = "create_by", nullable = false)
	public long getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(long createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "update_by")
	public Long getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(Long updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "delflag", nullable = false)
	public boolean isDelflag() {
		return this.delflag;
	}

	public void setDelflag(boolean delflag) {
		this.delflag = delflag;
	}

}
